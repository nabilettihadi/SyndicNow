version: '3.8'

services:
  backend:
    build:
      args:
        - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./:/app
      - ~/.m2:/root/.m2
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - JAVA_OPTS=-Xmx512m -Xms256m -XX:+UseG1GC
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
    ports:
      - "8080:8080"
      - "5005:5005"
    command: ["./mvnw", "spring-boot:run", "-Dspring-boot.run.jvmArguments='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    ports:
      - "4200:4200"
    command: ["npm", "run", "start", "--", "--host", "0.0.0.0"]

  db:
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  pgadmin:
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  adminer:
    image: adminer
    container_name: syndicnow-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - syndicnow-network
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin_data: 